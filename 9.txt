Slip 9

1]
Step 1: Create the Main Activity
The main activity will handle user input and determine if the given number is a palindrome.

java

package com.example.palindromechecker;

import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private EditText numberInput;
    private TextView resultText;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        numberInput = findViewById(R.id.getnum);
        resultText = findViewById(R.id.result_text);

        Button checkButton = findViewById(R.id.check_button);
        checkButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                checkPalindrome();
            }
        });
    }

    private void checkPalindrome() {
        String numberString = numberInput.getText().toString().trim();

        if (TextUtils.isEmpty(numberString)) {
            resultText.setText("Please enter a number.");
            return;
        }

        if (isPalindrome(numberString)) {
            resultText.setText(numberString + " is a palindrome.");
        } else {
            resultText.setText(numberString + " is NOT a palindrome.");
        }
    }

    private boolean isPalindrome(String str) {
        int left = 0;
        int right = str.length() - 1;

        while (left < right) {
            if (str.charAt(left) != str.charAt(right)) {
                return false;
            }
            left++;
            right--;
        }

        return true;
    }
}
Step 2: Create the Layout File
Design a simple layout with an EditText for user input, a Button to trigger the check, and a TextView to display the result.

xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <EditText
        android:id="@+id/getnum"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter a number"/>

    <Button
        android:id="@+id/check_button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Check"/>

    <TextView
        android:id="@+id/result_text"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:paddingTop="16dp"
        android:text="Result will be displayed here"/>

</LinearLayout>

2]
Step 1: Create the Main Activity
This activity will handle user input, arithmetic operations, and updating the display.

java

package com.example.simplecalculator;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private TextView display;
    private StringBuilder currentInput;
    private double firstOperand;
    private String operation;
    private boolean isOperationJustClicked;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        display = findViewById(R.id.display);
        currentInput = new StringBuilder();

        int[] digitButtons = {
                R.id.button0, R.id.button1, R.id.button2, R.id.button3, R.id.button4,
                R.id.button5, R.id.button6, R.id.button7, R.id.button8, R.id.button9
        };

        for (int id : digitButtons) {
            Button button = findViewById(id);
            button.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    if (isOperationJustClicked) {
                        currentInput.setLength(0);
                        isOperationJustClicked = false;
                    }
                    currentInput.append(((Button) v).getText().toString());
                    display.setText(currentInput.toString());
                }
            });
        }

        setOperationButton(R.id.button_add, "+");
        setOperationButton(R.id.button_subtract, "-");
        setOperationButton(R.id.button_multiply, "*");
        setOperationButton(R.id.button_divide, "/");

        Button equalsButton = findViewById(R.id.button_equals);
        equalsButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (operation != null && currentInput.length() > 0) {
                    double secondOperand = Double.parseDouble(currentInput.toString());
                    double result = 0;

                    switch (operation) {
                        case "+":
                            result = firstOperand + secondOperand;
                            break;
                        case "-":
                            result = firstOperand - secondOperand;
                            break;
                        case "*":
                            result = firstOperand * secondOperand;
                            break;
                        case "/":
                            if (secondOperand != 0) {
                                result = firstOperand / secondOperand;
                            } else {
                                display.setText("Error");
                                return; // Avoid division by zero
                            }
                            break;
                    }

                    display.setText(String.valueOf(result));
                    currentInput = new StringBuilder(String.valueOf(result));
                    operation = null; // Clear operation after calculation
                    isOperationJustClicked = true;
                }
            }
        });

        Button clearButton = findViewById(R.id.button_clear);
        clearButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                currentInput.setLength(0);
                display.setText("");
                firstOperand = 0;
                operation = null;
                isOperationJustClicked = false;
            }
        });
    }

    private void setOperationButton(int buttonId, String op) {
        Button button = findViewById(buttonId);
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (currentInput.length() > 0) {
                    firstOperand = Double.parseDouble(currentInput.toString());
                    operation = op;
                    isOperationJustClicked = true;
                }
            }
        });
    }
}
Step 2: Create the Layout File
Design the calculator's user interface with buttons for digits, operations, and controls.

xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <TextView
        android:id="@+id/display"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:inputType="none"
        android:gravity="right"
        android:textSize="24sp"
        android:padding="10dp"/>

    <GridLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:columnCount="4">

        <!-- First row: 7, 8, 9, Divide -->
        <Button
            android:id="@+id/button7"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="7"/>

        <Button
            android:id="@+id/button8"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="8"/>

        <Button
            android:id="@+id/button9"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="9"/>

        <Button
            android:id="@+id/button_divide"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="/"/>

        <!-- Second row: 4, 5, 6, Multiply -->
        <Button
            android:id="@+id/button4"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="4"/>

        <Button
            android:id="@+id/button5"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="5"/>

        <Button
            android:id="@+id/button6"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="6"/>

        <Button
            android:id="@+id/button_multiply"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="*"/>

        <!-- Third row: 1, 2, 3, Subtract -->
        <Button
            android:id="@+id/button1"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="1"/>

        <Button
            android:id="@+id/button2"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="2"/>

        <Button
            android:id="@+id/button3"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="3"/>

        <Button
            android:id="@+id/button_subtract"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="-"/>

        <!-- Fourth row: 0, Clear, Equals, Add -->
        <Button
            android:id="@+id/button0"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="0"/>

        <Button
            android:id="@+id/button_clear"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="C"/>

        <Button
            android:id="@+id/button_equals"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="="/>

        <Button
            android:id="@+id/button_add"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="+"/>

    </GridLayout>

</LinearLayout>