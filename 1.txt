
Slip 1 
1]
	
Step 1: Create a SplashActivity
In your Android project, create a new Java class called SplashActivity. This will represent the splash screen activity.

java

package com.example.myapp;

import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import androidx.appcompat.app.AppCompatActivity;

public class SplashActivity extends AppCompatActivity {

    private static final int SPLASH_DISPLAY_LENGTH = 3000; // 3 seconds

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_splash); // Splash screen layout

        // Delayed execution to launch the main activity after a specified time
        new Handler().postDelayed(new Runnable() {
            @Override
            public void run() {
                // Start the main activity
                Intent mainIntent = new Intent(SplashActivity.this, MainActivity.class);
                startActivity(mainIntent);
                finish(); // Close the splash activity
            }
        }, SPLASH_DISPLAY_LENGTH);
    }
}
Step 2: Create a Layout for the Splash Screen
Create a layout file called activity_splash.xml under res/layout. This layout represents the visual elements of the splash screen.

xml

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:gravity="center"
    android:background="@android:color/holo_blue_light"> <!-- Background color for splash screen -->

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Welcome to My App"
        android:textSize="24sp"
        android:textStyle="bold"
        android:layout_centerInParent="true"/>

</RelativeLayout>
Step 3: Modify AndroidManifest.xml
To make the SplashActivity the launcher activity (the first activity when the app starts), update the AndroidManifest.xml.

xml

<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.myapp">

    <application
        android:allowBackup="true"
        android:label="@string/app_name"
        android:theme="@style/Theme.MyApp">

        <!-- SplashActivity should be the launcher activity -->
        <activity android:name=".SplashActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- MainActivity - The main activity of your application -->
        <activity android:name=".MainActivity" />

    </application>
</manifest>

2]

Step 1: Create the Database Helper
First, create a class to manage the SQLite database. This class will contain the schema for your Student table and methods to perform database operations.

java

package com.example.mystudentapp;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

public class StudentDatabaseHelper extends SQLiteOpenHelper {

    private static final String DATABASE_NAME = "StudentDatabase";
    private static final int DATABASE_VERSION = 1;

    private static final String TABLE_STUDENT = "Student";
    private static final String COLUMN_ROLL_NO = "roll_no";
    private static final String COLUMN_NAME = "name";
    private static final String COLUMN_ADDRESS = "address";
    private static final String COLUMN_PERCENTAGE = "percentage";

    public StudentDatabaseHelper(Context context) {
        super(context, DATABASE_NAME, null, DATABASE_VERSION);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        // Create the Student table
        String createTableQuery = "CREATE TABLE " + TABLE_STUDENT + " (" +
                COLUMN_ROLL_NO + " INTEGER PRIMARY KEY, " +
                COLUMN_NAME + " TEXT, " +
                COLUMN_ADDRESS + " TEXT, " +
                COLUMN_PERCENTAGE + " REAL)";
        db.execSQL(createTableQuery);
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        // Drop the table if it exists
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_STUDENT);
        onCreate(db);
    }

    // Method to insert a student record
    public boolean insertStudent(int roll_no, String name, String address, double percentage) {
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues values = new ContentValues();
        values.put(COLUMN_ROLL_NO, roll_no);
        values.put(COLUMN_NAME, name);
        values.put(COLUMN_ADDRESS, address);
        values.put(COLUMN_PERCENTAGE, percentage);
        long result = db.insert(TABLE_STUDENT, null, values);
        return result != -1; // Returns true if insertion was successful
    }

    // Method to retrieve all student records
    public Cursor getAllStudents() {
        SQLiteDatabase db = this.getReadableDatabase();
        String query = "SELECT * FROM " + TABLE_STUDENT;
        return db.rawQuery(query, null);
    }
}
Step 2: Create the Main Activity
Next, create the main activity to insert and display student records.

java

package com.example.mystudentapp;

import android.database.Cursor;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private StudentDatabaseHelper dbHelper;
    private EditText rollNoInput, nameInput, addressInput, percentageInput;
    private TextView outputView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        dbHelper = new StudentDatabaseHelper(this);

        rollNoInput = findViewById(R.id.roll_no_input);
        nameInput = findViewById(R.id.name_input);
        addressInput = findViewById(R.id.address_input);
        percentageInput = findViewById(R.id.percentage_input);

        Button insertButton = findViewById(R.id.insert_button);
        Button showAllButton = findViewById(R.id.show_all_button);

        outputView = findViewById(R.id.output_view);

        insertButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                insertStudent();
            }
        });

        showAllButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                showAllStudents();
            }
        });
    }

    // Method to insert a student record
    private void insertStudent() {
        try {
            int roll_no = Integer.parseInt(rollNoInput.getText().toString());
            String name = nameInput.getText().toString();
            String address = addressInput.getText().toString();
            double percentage = Double.parseDouble(percentageInput.getText().toString());

            if (dbHelper.insertStudent(roll_no, name, address, percentage)) {
                outputView.setText("Student record inserted successfully.");
            } else {
                outputView.setText("Error inserting student record.");
            }
        } catch (NumberFormatException e) {
            outputView.setText("Please enter valid values.");
        }
    }

    // Method to display all student records
    private void showAllStudents() {
        Cursor cursor = dbHelper.getAllStudents();
        if (cursor != null && cursor.moveToFirst()) {
            StringBuilder sb = new StringBuilder();
            do {
                int roll_no = cursor.getInt(cursor.getColumnIndex(StudentDatabaseHelper.COLUMN_ROLL_NO));
                String name = cursor.getString(cursor.getColumnIndex(StudentDatabaseHelper.COLUMN_NAME));
                String address = cursor.getString(cursor.getColumnIndex(StudentDatabaseHelper.COLUMN_ADDRESS));
                double percentage = cursor.getDouble(cursor.getColumnIndex(StudentDatabaseHelper.COLUMN_PERCENTAGE));

                sb.append("Roll No: ").append(roll_no).append("\n");
                sb.append("Name: ").append(name).append("\n");
                sb.append("Address: ").append(address).append("\n");
                sb.append("Percentage: ").append(percentage).append("\n");
                sb.append("-----------------------------\n");
            } while (cursor.moveToNext());

            outputView.setText(sb.toString());
        } else {
            outputView.setText("No student records found.");
        }
    }
}
Step 3: Create the Layout File
Create a layout file (activity_main.xml) to define the UI elements needed to insert and display student records.

xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <EditText
        android:id="@+id/roll_no_input"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Roll No"/>

    <EditText
        android:id="@+id/name_input"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Name"/>

    <EditText
        android:id="@+id/address_input"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Address"/>

    <EditText
        android:id="@+id/percentage_input"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Percentage"
        android:inputType="numberDecimal"/>

    <Button
        android:id="@+id/insert_button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Insert Student"/>

    <Button
        android:id="@+id/show_all_button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Show All Students"/>

    <TextView
        android:id="@+id/output_view"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Output will be displayed here"
        android:paddingTop="16dp"/>

</LinearLayout>