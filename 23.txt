Slip 23

1]
Step 1: Create the Main Activity
This activity demonstrates multiple implicit intents with buttons to trigger various actions.

java

package com.example.implicitintentdemo;

import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.widget.Button;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedSession);
        setContentView(R.layout.activity_main);

        Button openWebPageButton = findViewById(R.id.open_web_page_button);
        Button dialPhoneNumberButton = findViewById(R.id.dial_phone_number_button);
        Button sendEmailButton = findViewById(R.id.send_email_button);
        Button viewLocationButton = findViewById(R.id.view_location_button);

        openWebPageButton.setOnClickListener(v -> openWebPage("https://www.example.com"));
        dialPhoneNumberButton.setOnClickListener(v -> dialPhoneNumber("1234567890"));
        sendEmailButton.setOnClickListener(v -> sendEmail("test@example.com", "Subject", "Email body text"));
        viewLocationButton.setOnClickListener(v -> viewLocation("geo:37.7749,-122.4194"));
    }

    private void openWebPage(String url) {
        Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
        if (intent.resolveActivity(getPackageManager()) != null) {
            startActivity(intent); // Open the web page
        } else {
            Toast.makeText(this, "No application to open web pages.", Toast.LENGTH_SHORT).show();
        }
    }

    private void dialPhoneNumber(String phoneNumber) {
        Intent intent = new Intent(Intent.ACTION_DIAL, Uri.parse("tel:" + phoneNumber));
        if (intent.resolveActivity(getPackageManager()) != null) {
            startActivity(intent); // Open the dialer with the phone number
        } else {
            Toast.makeText(this, "No application to dial phone numbers.", Toast.LENGTH_SHORT).show();
        }
    }

    private void sendEmail(String emailAddress, String subject, String body) {
        Intent intent = new Intent(Intent.ACTION_SENDTO, Uri.fromParts("mailto", emailAddress, null));
        intent.putExtra(Intent.EXTRA_SUBJECT, subject);
        intent.putExtra(Intent.EXTRA_TEXT, body);
        if (intent.resolveActivity(getPackageManager()) != null) {
            startActivity(intent); // Open the email application
        } else {
            Toast.makeText(this, "No email application found.", Toast.LENGTH_SHORT).show();
        }
    }

    private void viewLocation(String geoUri) {
        Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(geoUri));
        if (intent.resolveActivity(getPackageManager()) != null) {
            startActivity(intent); // Open the map application
        } else {
            Toast.makeText(this, "No application to view locations.", Toast.LENGTH_SHORT).show();
        }
    }
}
Step 2: Create the Layout File
This layout contains buttons to trigger various implicit intents.

res/layout/activity_main.xml
xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp"
    android:gravity="center">

    <Button
        android:id="@+id/open_web_page_button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Open Web Page"/>

    <Button
        android:id="@+id/dial_phone_number_button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Dial Phone Number"/>

    <Button
        android:id="@+id/send_email_button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Send Email"/>

    <Button
        android:id="@+id/view_location_button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="View Location on Map"/>

</LinearLayout>

2]
Step 1: Create the Main Activity
In this activity, you'll manage user input, handle radio buttons and checkboxes, and define button actions.

java

package com.example.messageformatter;

import android.graphics.Color;
import android.graphics.Typeface;
import android.os.Bundle;
import android.text.Html;
import android.view.View;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private EditText nameInput;
    private TextView displayLabel;
    private RadioGroup colorGroup;
    private CheckBox boldCheckBox, italicCheckBox, underlineCheckBox;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        nameInput = findViewById(R.id.name_input);
        displayLabel = findViewById(R.id.display_label);

        colorGroup = findViewById(R.id.color_group); // Radio buttons for text color

        boldCheckBox = findViewById(R.id.bold_checkbox);
        italicCheckBox = findViewById(R.id.italic_checkbox);
        underlineCheckBox = findViewById(R.id.underline_checkbox);

        Button displayButton = findViewById(R.id.display_button); // Display the message
        displayButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                displayMessage();
            }
        });

        Button clearButton = findViewById(R.id.clear_button); // Clear the input and label
        clearButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                clearText();
            }
        });

        Button exitButton = findViewById(R.id.exit_button); // Exit the application
        exitButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish(); // Close the activity
            }
        });
    }

    private void displayMessage() {
        String name = nameInput.getText().toString().trim();

        if (name.isEmpty()) {
            displayLabel.setText("Please enter your name.");
            return;
        }

        String message = "Hello, " + name + "!";

        // Set text style based on checkboxes
        int textStyle = Typeface.NORMAL;
        if (boldCheckBox.isChecked()) {
            textStyle |= Typeface.BOLD;
        }
        if (italicCheckBox.isChecked()) {
            textStyle |= Typeface.ITALIC;
        }

        displayLabel.setTypeface(null, textStyle);

        // Underline the text if the checkbox is checked
        if (underlineCheckBox.isChecked()) {
            displayLabel.setText(Html.fromHtml("<u>" + message + "</u>"));
        } else {
            displayLabel.setText(message); // Reset text without underline
        }

        // Set text color based on the selected radio button
        int selectedColorId = colorGroup.getCheckedRadioButtonId();
        switch (selectedColorId) {
            case R.id.red_radio:
                displayLabel.setTextColor(Color.RED);
                break;
            case R.id.green_radio:
                displayLabel.setTextColor(Color.GREEN);
                break;
            case R.id.blue_radio:
                displayLabel.setTextColor(Color.BLUE);
                break;
            default:
                displayLabel.setTextColor(Color.BLACK); // Default color
                break;
        }
    }

    private void clearText() {
        nameInput.setText(""); // Clear the text input
        displayLabel.setText(""); // Clear the label
        boldCheckBox.setChecked(false);
        italicCheckBox.setChecked(false);
        underlineCheckBox.setChecked(false);
        colorGroup.clearCheck(); // Clear the radio button selection
    }
}
Step 2: Create the Layout File
Design the layout with an EditText for name input, a TextView for the label, radio buttons for text color, checkboxes for text style, and buttons for different actions.

xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <EditText
        android:id="@+id/name_input"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter your name"/>

    <RadioGroup
        android:id="@+id/color_group"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal">

        <RadioButton
            android:id="@+id/red_radio"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Red"/>

        <RadioButton
            android:id="@+id/green_radio"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Green"/>

        <RadioButton
            android:id="@+id/blue_radio"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Blue"/>

    </RadioGroup>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal">

        <CheckBox
            android:id="@+id/bold_checkbox"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Bold"/>

        <CheckBox
            android:id="@+id/italic_checkbox"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Italic"/>

        <CheckBox
            android:id="@+id/underline_checkbox"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Underline"/>

    </LinearLayout>

    <Button
        android:id="@+id/display_button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Display"/>

    <Button
        android:id="@+id/clear_button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Clear"/>

    <Button
        android:id="@+id/exit_button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Exit"/>

    <TextView
        android:id="@+id/display_label"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:paddingTop="16dp"
        android:text=""/>

</LinearLayout>