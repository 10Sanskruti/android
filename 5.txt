Slip 5.

1]
Step 1: Create the Main Activity
This activity creates a simple user interface with a button that, when clicked, displays an Alert Dialog.

java

package com.example.alertdialogdemo;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        Button showDialogButton = findViewById(R.id.show_dialog_button);

        showDialogButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                showAlertDialog();
            }
        });
    }

    private void showAlertDialog() {
        // Create an AlertDialog.Builder to build the dialog
        AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);

        // Set the dialog title
        builder.setTitle("Alert Dialog Example");

        // Set the dialog message
        builder.setMessage("This is a simple alert dialog demonstration.");

        // Set positive button with a click listener
        builder.setPositiveButton("OK", (dialog, which) -> {
            // Code to execute when "OK" is clicked
            dialog.dismiss(); // Dismiss the dialog
        });

        // Set negative button with a click listener
        builder.setNegativeButton("Cancel", (dialog, which) -> {
            // Code to execute when "Cancel" is clicked
            dialog.dismiss(); // Dismiss the dialog
        });

        // Set neutral button with a click listener
        builder.setNeutralButton("Help", (dialog, which) -> {
            // Code to execute when "Help" is clicked
            // For example, you might display additional information or perform some action
            dialog.dismiss();
        });

        // Create the AlertDialog and show it
        AlertDialog alertDialog = builder.create();
        alertDialog.show();
    }
}
Step 2: Create the Layout File
Design a simple layout with a button to trigger the alert dialog.

xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:gravity="center"
    android:padding="16dp">

    <Button
        android:id="@+id/show_dialog_button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Show Alert Dialog"/>

</LinearLayout>

2]
Step 1: Create the Main Activity
This activity handles user input, manages text formatting based on radio buttons and checkboxes, and performs button actions.

java

package com.example.textformatterapp;

import android.graphics.Color;
import android.graphics.Typeface;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private EditText nameInput;
    private TextView displayLabel;
    private RadioGroup colorGroup;
    private CheckBox boldCheckBox, italicCheckBox, underlineCheckBox;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        nameInput = findViewById(R.id.name_input);
        displayLabel = findViewById(R.id.display_label);

        // RadioGroup for color selection
        colorGroup = findViewById(R.id.color_group);

        // CheckBoxes for text style
        boldCheckBox = findViewById(R.id.bold_checkbox);
        italicCheckBox = findViewById(R.id.italic_checkbox);
        underlineCheckBox = findViewById(R.id.underline_checkbox);

        // Button to display message
        Button displayButton = findViewById(R.id.display_button);
        displayButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                displayMessage();
            }
        });

        // Button to clear input and label
        Button clearButton = findViewById(R.id.clear_button);
        clearButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                clearText();
            }
        });

        // Button to exit the application
        Button exitButton = findViewById(R.id.exit_button);
        exitButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish(); // Exit the app
            }
        });
    }

    private void displayMessage() {
        String name = nameInput.getText().toString();
        if (name.isEmpty()) {
            displayLabel.setText("Please enter your name.");
            return;
        }

        String message = "Hello, " + name + "!";
        displayLabel.setText(message);

        // Set text style based on checkboxes
        int textStyle = Typeface.NORMAL;
        if (boldCheckBox.isChecked()) {
            textStyle |= Typeface.BOLD;
        }
        if (italicCheckBox.isChecked()) {
            textStyle |= Typeface.ITALIC;
        }

        displayLabel.setTypeface(null, textStyle);

        // Underline the text if the checkbox is checked
        if (underlineCheckBox.isChecked()) {
            displayLabel.setText(android.text.Html.fromHtml("<u>" + message + "</u>"));
        } else {
            displayLabel.setText(message); // reset text without underline
        }

        // Set text color based on the selected radio button
        int selectedColorId = colorGroup.getCheckedRadioButtonId();
        switch (selectedColorId) {
            case R.id.red_radio:
                displayLabel.setTextColor(Color.RED);
                break;
            case R.id.green_radio:
                displayLabel.setTextColor(Color.GREEN);
                break;
            case R.id.blue_radio:
                displayLabel.setTextColor(Color.BLUE);
                break;
            default:
                displayLabel.setTextColor(Color.BLACK);
                break;
        }
    }

    private void clearText() {
        nameInput.setText("");
        displayLabel.setText("");
        boldCheckBox.setChecked(false);
        italicCheckBox.setChecked(false);
        underlineCheckBox.setChecked(false);
        colorGroup.clearCheck(); // Clear radio button selection
    }
}
Step 2: Create the Layout File
Design the layout with the necessary components for text input, formatting options, and action buttons.

xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <EditText
        android:id="@+id/name_input"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter your name"/>

    <RadioGroup
        android:id="@+id/color_group"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal">

        <RadioButton
            android:id="@+id/red_radio"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Red"/>

        <RadioButton
            android:id="@+id/green_radio"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Green"/>

        <RadioButton
            android:id="@+id/blue_radio"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Blue"/>

    </RadioGroup>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal">

        <CheckBox
            android:id="@+id/bold_checkbox"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Bold"/>

        <CheckBox
            android:id="@+id/italic_checkbox"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Italic"/>

        <CheckBox
            android:id="@+id/underline_checkbox"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Underline"/>

    </LinearLayout>

    <TextView
        android:id="@+id/display_label"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:paddingTop="16dp"
        android:textSize="20sp"/>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal">

        <Button
            android:id="@+id/display_button"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Display"/>

        <Button
            android:id="@+id/clear_button"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Clear"/>

        <Button
            android:id="@+id/exit_button"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Exit"/>

    </LinearLayout>

</LinearLayout>