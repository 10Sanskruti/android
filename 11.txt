Slip 11

1]
Step 1: Create the Main Activity
This activity takes two numbers as input, calculates power and average based on the button clicked, and sends the results to the second activity.

java

package com.example.calculationsapp;

import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private EditText number1Input;
    private EditText number2Input;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        number1Input = findViewById(R.id.number1_input);
        number2Input = findViewById(R.id.number2_input);

        Button powerButton = findViewById(R.id.power_button);
        Button averageButton = findViewById(R.id.average_button);

        powerButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                calculatePower();
            }
        });

        averageButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                calculateAverage();
            }
        });
    }

    private void calculatePower() {
        String num1Str = number1Input.getText().toString();
        String num2Str = number2Input.getText().toString();

        if (TextUtils.isEmpty(num1Str) || TextUtils.isEmpty(num2Str)) {
            Toast.makeText(this, "Please enter both numbers.", Toast.LENGTH_SHORT).show();
            return;
        }

        double num1 = Double.parseDouble(num1Str);
        double num2 = Double.parseDouble(num2Str);
        double result = Math.pow(num1, num2);

        Intent intent = new Intent(this, ResultActivity.class);
        intent.putExtra("result", "Power: " + result);
        startActivity(intent);
    }

    private void calculateAverage() {
        String num1Str = number1Input.getText().toString();
        String num2Str = number2Input.getText().toString();

        if (TextUtils.isEmpty(num1Str) || TextUtils.isEmpty(num2Str)) {
            Toast.makeText(this, "Please enter both numbers.", Toast.LENGTH_SHORT).show();
            return;
        }

        double num1 = Double.parseDouble(num1Str);
        double num2 = Double.parseDouble(num2Str);
        double result = (num1 + num2) / 2;

        Intent intent = new Intent(this, ResultActivity.class);
        intent.putExtra("result", "Average: " + result);
        startActivity(intent);
    }
}
Step 2: Create the Result Activity
This activity receives the result from the main activity and displays it.

java

package com.example.calculationsapp;

import android.os.Bundle;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;

public class ResultActivity extends AppCompatActivity {

    private TextView resultText;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_result);

        resultText = findViewById(R.id.result_text);

        // Retrieve the result from the intent and display it
        String result = getIntent().getStringExtra("result");
        resultText.setText(result);
    }
}
Step 3: Create Layout Files
Layout for Main Activity (activity_main.xml)
xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <EditText
        android:id="@+id/number1_input"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter first number"/>

    <EditText
        android:id="@+id/number2_input"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter second number"/>

    <Button
        android:id="@+id/power_button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Calculate Power"/>

    <Button
        android:id="@+id/average_button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Calculate Average"/>

</LinearLayout>
Layout for Result Activity (activity_result.xml)
xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp"
    android:gravity="center">

    <TextView
        android:id="@+id/result_text"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="24sp"
        android:gravity="center"/>

</LinearLayout>

2]
Step 1: Create the Main Activity
This activity takes a string input, applies the selected operation, and displays the result.

java

package com.example.stringoperations;

import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private EditText stringInput;
    private RadioGroup operationGroup;
    private TextView resultText;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        stringInput = findViewById(R.id.string_input); // Text input for entering a string
        operationGroup = findViewById(R.id.operation_group); // Group of radio buttons for selecting an operation
        resultText = findViewById(R.id.result_text); // TextView to display the result

        Button performButton = findViewById(R.id.perform_button); // Button to trigger the operation
        performButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                performStringOperation();
            }
        });
    }

    private void performStringOperation() {
        String input = stringInput.getText().toString().trim();

        if (TextUtils.isEmpty(input)) {
            Toast.makeText(this, "Please enter a string.", Toast.LENGTH_SHORT).show();
            return;
        }

        int selectedOperationId = operationGroup.getCheckedRadioButtonId(); // Get the selected radio button
        RadioButton selectedOperation = findViewById(selectedOperationId);

        String result;

        switch (selectedOperation.getText().toString()) {
            case "Reverse":
                result = new StringBuilder(input).reverse().toString(); // Reverse the string
                break;
            case "Uppercase":
                result = input.toUpperCase(); // Convert to uppercase
                break;
            case "Length":
                result = "Length: " + input.length(); // Get the string length
                break;
            default:
                result = "No operation selected.";
                break;
        }

        resultText.setText(result); // Display the result
    }
}
Step 2: Create the Layout File
This layout includes a text input for user input, a group of radio buttons for selecting an operation, and a button to trigger the operation.

xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <EditText
        android:id="@+id/string_input"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter a string"/>

    <RadioGroup
        android:id="@+id/operation_group"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical">

        <RadioButton
            android:id="@+id/radio_reverse"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Reverse"/>

        <RadioButton
            android:id="@+id/radio_uppercase"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Uppercase"/>

        <RadioButton
            android:id="@+id/radio_length"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Length"/>

    </RadioGroup>

    <Button
        android:id="@+id/perform_button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Perform Operation"/>

    <TextView
        android:id="@+id/result_text"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:paddingTop="16dp"
        android:text="Result will be displayed here"/>

</LinearLayout>