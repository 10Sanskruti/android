Slip 12

1]
package com.example.lightbulbapp;

import android.os.Bundle;
import android.widget.ImageView;
import android.widget.ToggleButton;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private ImageView lightbulbImage;
    private ToggleButton toggleButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        lightbulbImage = findViewById(R.id.lightbulb_image); // ImageView to display the lightbulb
        toggleButton = findViewById(R.id.toggle_button); // ToggleButton to switch between ON and OFF states

        // Set initial state
        lightbulbImage.setImageResource(R.drawable.lightbulb_off); // Set the default image to OFF

        // Handle toggle button state changes
        toggleButton.setOnCheckedChangeListener((buttonView, isChecked) -> {
            if (isChecked) {
                // If the toggle button is checked, set the lightbulb to ON
                lightbulbImage.setImageResource(R.drawable.lightbulb_on);
            } else {
                // If the toggle button is unchecked, set the lightbulb to OFF
                lightbulbImage.setImageResource(R.drawable.lightbulb_off);
            }
        });
    }
}
Step 3: Create the Layout File
Design the layout with an ImageView to represent the lightbulb and a ToggleButton to control the state.

xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:gravity="center"
    android:padding="16dp">

    <ImageView
        android:id="@+id/lightbulb_image"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:src="@drawable/lightbulb_off" /> <!-- Default to OFF -->

    <ToggleButton
        android:id="@+id/toggle_button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textOn="Lightbulb ON"
        android:textOff="Lightbulb OFF" />
        
</LinearLayout>
2]
Step 1: Create the Main Activity
In this activity, you'll manage user input, handle radio buttons and checkboxes, and define button actions.

java

package com.example.messageformatter;

import android.graphics.Color;
import android.graphics.Typeface;
import android.os.Bundle;
import android.text.Html;
import android.view.View;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private EditText nameInput;
    private TextView displayLabel;
    private RadioGroup colorGroup;
    private CheckBox boldCheckBox, italicCheckBox, underlineCheckBox;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        nameInput = findViewById(R.id.name_input);
        displayLabel = findViewById(R.id.display_label);

        colorGroup = findViewById(R.id.color_group); // Radio buttons for text color

        boldCheckBox = findViewById(R.id.bold_checkbox);
        italicCheckBox = findViewById(R.id.italic_checkbox);
        underlineCheckBox = findViewById(R.id.underline_checkbox);

        Button displayButton = findViewById(R.id.display_button); // Display the message
        displayButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                displayMessage();
            }
        });

        Button clearButton = findViewById(R.id.clear_button); // Clear the input and label
        clearButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                clearText();
            }
        });

        Button exitButton = findViewById(R.id.exit_button); // Exit the application
        exitButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish(); // Close the activity
            }
        });
    }

    private void displayMessage() {
        String name = nameInput.getText().toString().trim();

        if (name.isEmpty()) {
            displayLabel.setText("Please enter your name.");
            return;
        }

        String message = "Hello, " + name + "!";

        // Set text style based on checkboxes
        int textStyle = Typeface.NORMAL;
        if (boldCheckBox.isChecked()) {
            textStyle |= Typeface.BOLD;
        }
        if (italicCheckBox.isChecked()) {
            textStyle |= Typeface.ITALIC;
        }

        displayLabel.setTypeface(null, textStyle);

        // Underline the text if the checkbox is checked
        if (underlineCheckBox.isChecked()) {
            displayLabel.setText(Html.fromHtml("<u>" + message + "</u>"));
        } else {
            displayLabel.setText(message); // Reset text without underline
        }

        // Set text color based on the selected radio button
        int selectedColorId = colorGroup.getCheckedRadioButtonId();
        switch (selectedColorId) {
            case R.id.red_radio:
                displayLabel.setTextColor(Color.RED);
                break;
            case R.id.green_radio:
                displayLabel.setTextColor(Color.GREEN);
                break;
            case R.id.blue_radio:
                displayLabel.setTextColor(Color.BLUE);
                break;
            default:
                displayLabel.setTextColor(Color.BLACK); // Default color
                break;
        }
    }

    private void clearText() {
        nameInput.setText(""); // Clear the text input
        displayLabel.setText(""); // Clear the label
        boldCheckBox.setChecked(false);
        italicCheckBox.setChecked(false);
        underlineCheckBox.setChecked(false);
        colorGroup.clearCheck(); // Clear the radio button selection
    }
}
Step 2: Create the Layout File
Design the layout with an EditText for name input, a TextView for the label, radio buttons for text color, checkboxes for text style, and buttons for different actions.

xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <EditText
        android:id="@+id/name_input"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter your name"/>

    <RadioGroup
        android:id="@+id/color_group"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal">

        <RadioButton
            android:id="@+id/red_radio"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Red"/>

        <RadioButton
            android:id="@+id/green_radio"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Green"/>

        <RadioButton
            android:id="@+id/blue_radio"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Blue"/>

    </RadioGroup>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal">

        <CheckBox
            android:id="@+id/bold_checkbox"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Bold"/>

        <CheckBox
            android:id="@+id/italic_checkbox"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Italic"/>

        <CheckBox
            android:id="@+id/underline_checkbox"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Underline"/>

    </LinearLayout>

    <Button
        android:id="@+id/display_button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Display"/>

    <Button
        android:id="@+id/clear_button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Clear"/>

    <Button
        android:id="@+id/exit_button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Exit"/>

    <TextView
        android:id="@+id/display_label"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:paddingTop="16dp"
        android:text=""/>

</LinearLayout>